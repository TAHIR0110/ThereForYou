"use strict";(self.webpackChunk_streamlit_app=self.webpackChunk_streamlit_app||[]).push([[5345],{46979:(e,t,r)=>{r.r(t),r.d(t,{FileSystemDirectoryHandle:()=>d,default:()=>y});var n=r(64649),i=r(93232),a=r(69758);let o;const{GONE:s,MOD_ERR:l}=a.errors,c=Symbol("adapter");o=Symbol.asyncIterator;class d extends i.Z{constructor(e){super(e),(0,n.Z)(this,c,void 0),this[c]=e}async getDirectoryHandle(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(""===e)throw new TypeError("Name can't be an empty string.");if("."===e||".."===e||e.includes("/"))throw new TypeError("Name contains invalid characters.");t.create=!!t.create;const r=await this[c].getDirectoryHandle(e,t);return new d(r)}async*entries(){const{FileSystemFileHandle:e}=await Promise.resolve().then(r.bind(r,8192));for await(const[t,r]of this[c].entries())yield[r.name,"file"===r.kind?new e(r):new d(r)]}async*getEntries(){const{FileSystemFileHandle:e}=await Promise.resolve().then(r.bind(r,8192));console.warn("deprecated, use .entries() instead");for await(let t of this[c].entries())yield"file"===t.kind?new e(t):new d(t)}async getFileHandle(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{FileSystemFileHandle:n}=await Promise.resolve().then(r.bind(r,8192));if(""===e)throw new TypeError("Name can't be an empty string.");if("."===e||".."===e||e.includes("/"))throw new TypeError("Name contains invalid characters.");t.create=!!t.create;return new n(await this[c].getFileHandle(e,t))}async removeEntry(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(""===e)throw new TypeError("Name can't be an empty string.");if("."===e||".."===e||e.includes("/"))throw new TypeError("Name contains invalid characters.");return t.recursive=!!t.recursive,this[c].removeEntry(e,t)}async resolve(e){if(await e.isSameEntry(this))return[];const t=[{handle:this,path:[]}];for(;t.length;){let{handle:r,path:n}=t.pop();for await(const i of r.values()){if(await i.isSameEntry(e))return[...n,i.name];"directory"===i.kind&&t.push({handle:i,path:[...n,i.name]})}}return null}async*keys(){for await(const[e]of this[c].entries())yield e}async*values(){for await(const[e,t]of this)yield t}[o](){return this.entries()}}if(Object.defineProperty(d.prototype,Symbol.toStringTag,{value:"FileSystemDirectoryHandle",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(d.prototype,{getDirectoryHandle:{enumerable:!0},entries:{enumerable:!0},getFileHandle:{enumerable:!0},removeEntry:{enumerable:!0}}),globalThis.FileSystemDirectoryHandle){const m=globalThis.FileSystemDirectoryHandle.prototype;async function p(e){const t=await navigator.storage.getDirectory();if(null===await t.resolve(e))throw new DOMException(...s)}m.resolve=async function(e){if(await e.isSameEntry(this))return[];const t=[{handle:this,path:[]}];for(;t.length;){let{handle:r,path:n}=t.pop();for await(const i of r.values()){if(await i.isSameEntry(e))return[...n,i.name];"directory"===i.kind&&t.push({handle:i,path:[...n,i.name]})}}return null};const u=m.entries;m.entries=async function*(){await p(this),yield*u.call(this)},m[Symbol.asyncIterator]=async function*(){yield*this.entries()};const h=m.removeEntry;m.removeEntry=async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return h.call(this,e,t).catch((async e=>{if(e instanceof DOMException&&"UnknownError"===e.name&&!t.recursive){if(!(await u.call(this).next()).done)throw new DOMException(...l)}throw e}))}}const y=d},8192:(e,t,r)=>{r.r(t),r.d(t,{FileSystemFileHandle:()=>y,default:()=>m});var n=r(64649),i=r(93232),a=r(83885),o=r(69758);const{INVALID:s,SYNTAX:l,GONE:c}=o.errors,d=Symbol("adapter");class y extends i.Z{constructor(e){super(e),(0,n.Z)(this,d,void 0),this[d]=e}async createWritable(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return new a.Z(await this[d].createWritable(e))}async getFile(){return this[d].getFile()}}if(Object.defineProperty(y.prototype,Symbol.toStringTag,{value:"FileSystemFileHandle",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(y.prototype,{createWritable:{enumerable:!0},getFile:{enumerable:!0}}),globalThis.FileSystemFileHandle&&!globalThis.FileSystemFileHandle.prototype.createWritable){const e=new WeakMap;let t;const r=()=>{let e,t;onmessage=async r=>{const n=r.ports[0],i=r.data;switch(i.type){case"open":const r=i.name;let n=await navigator.storage.getDirectory();for(const e of i.path)n=await n.getDirectoryHandle(e);e=await n.getFileHandle(r),t=await e.createSyncAccessHandle();break;case"write":t.write(i.data,{at:i.position}),t.flush();break;case"truncate":t.truncate(i.size);break;case"abort":case"close":t.close()}n.postMessage(0)}};globalThis.FileSystemFileHandle.prototype.createWritable=async function(n){if(!t){const e="(".concat(r.toString(),")()"),n=new Blob([e],{type:"text/javascript"});t=URL.createObjectURL(n)}const i=new Worker(t,{type:"module"});let o=0;const d=new TextEncoder;let y=await this.getFile().then((e=>e.size));const m=e=>new Promise(((t,r)=>{const n=new MessageChannel;n.port1.onmessage=e=>{e.data instanceof Error?r(e.data):t(e.data),n.port1.close(),n.port2.close(),n.port1.onmessage=null},i.postMessage(e,[n.port2])})),p=await navigator.storage.getDirectory(),u=await e.get(this),h=await p.resolve(u);if(null===h)throw new DOMException(...c);let w;await m({type:"open",path:h,name:this.name}),!1===(null===n||void 0===n?void 0:n.keepExistingData)&&(await m({type:"truncate",size:0}),y=0);return new a.Z({start:e=>{w=e},async write(e){var t;if("write"===(e=(null===(t=e)||void 0===t?void 0:t.constructor)===Object?{...e}:{type:"write",data:e,position:o}).type){var r,n;if(!("data"in e))throw await m({type:"close"}),new DOMException(...l("write requires a data argument"));if(null!==(n=(r=e).position)&&void 0!==n||(r.position=o),"string"===typeof e.data)e.data=d.encode(e.data);else if(e.data instanceof ArrayBuffer)e.data=new Uint8Array(e.data);else if(e.data instanceof Uint8Array||!ArrayBuffer.isView(e.data)){if(!(e.data instanceof Uint8Array)){const t=await new Response(e.data).arrayBuffer();e.data=new Uint8Array(t)}}else e.data=new Uint8Array(e.data.buffer,e.data.byteOffset,e.data.byteLength);Number.isInteger(e.position)&&e.position>=0&&(o=e.position),o+=e.data.byteLength,y+=e.data.byteLength}else{if("seek"===e.type){if(Number.isInteger(e.position)&&e.position>=0){if(y<e.position)throw new DOMException(...s);return console.log("seeking",e),void(o=e.position)}throw await m({type:"close"}),new DOMException(...l("seek requires a position argument"))}if("truncate"===e.type){if(!(Number.isInteger(e.size)&&e.size>=0))throw await m({type:"close"}),new DOMException(...l("truncate requires a size argument"));y=e.size,o>y&&(o=y)}}await m(e)},async close(){await m({type:"close"}),i.terminate()},async abort(e){await m({type:"abort",reason:e}),i.terminate()}})};const n=FileSystemDirectoryHandle.prototype.getFileHandle;FileSystemDirectoryHandle.prototype.getFileHandle=async function(){for(var t=arguments.length,r=new Array(t),i=0;i<t;i++)r[i]=arguments[i];const a=await n.call(this,...r);return e.set(a,this),a}}const m=y},93232:(e,t,r)=>{r.d(t,{Z:()=>l});var n=r(64649);const i=Symbol("adapter");class a{constructor(e){(0,n.Z)(this,i,void 0),(0,n.Z)(this,"name",void 0),(0,n.Z)(this,"kind",void 0),this.kind=e.kind,this.name=e.name,this[i]=e}async queryPermission(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{mode:t="read"}=e,r=this[i];if(r.queryPermission)return r.queryPermission({mode:t});if("read"===t)return"granted";if("readwrite"===t)return r.writable?"granted":"denied";throw new TypeError("Mode ".concat(t," must be 'read' or 'readwrite'"))}async requestPermission(){let{mode:e="read"}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t=this[i];if(t.requestPermission)return t.requestPermission({mode:e});if("read"===e)return"granted";if("readwrite"===e)return t.writable?"granted":"denied";throw new TypeError("Mode ".concat(e," must be 'read' or 'readwrite'"))}async remove(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};await this[i].remove(e)}async isSameEntry(e){return this===e||!(!e||"object"!==typeof e||this.kind!==e.kind||!e[i])&&this[i].isSameEntry(e[i])}}var o,s;(Object.defineProperty(a.prototype,Symbol.toStringTag,{value:"FileSystemHandle",writable:!1,enumerable:!1,configurable:!0}),globalThis.FileSystemHandle)&&(null!==(s=(o=globalThis.FileSystemHandle.prototype).queryPermission)&&void 0!==s||(o.queryPermission=function(e){return"granted"}));const l=a},83885:(e,t,r)=>{function n(e,t,r){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,r)}function i(e,t,r){var n=function(e,t,r){if(!t.has(e))throw new TypeError("attempted to "+r+" private field on non-instance");return t.get(e)}(e,t,"set");return function(e,t,r){if(t.set)t.set.call(e,r);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=r}}(e,n,r),r}r.d(t,{Z:()=>c});var a=r(60643);const{WritableStream:o}=a.Z;var s=new WeakMap;class l extends o{constructor(e){super(e),n(this,s,{writable:!0,value:void 0}),i(this,s,e),Object.setPrototypeOf(this,l.prototype),this._closed=!1}async close(){this._closed=!0;const e=this.getWriter(),t=e.close();return e.releaseLock(),t}seek(e){return this.write({type:"seek",position:e})}truncate(e){return this.write({type:"truncate",size:e})}write(e){if(this._closed)return Promise.reject(new TypeError("Cannot write to a CLOSED writable stream"));const t=this.getWriter(),r=t.write(e);return t.releaseLock(),r}}Object.defineProperty(l.prototype,Symbol.toStringTag,{value:"FileSystemWritableFileStream",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(l.prototype,{close:{enumerable:!0},seek:{enumerable:!0},truncate:{enumerable:!0},write:{enumerable:!0}}),!globalThis.FileSystemFileHandle||globalThis.FileSystemFileHandle.prototype.createWritable||globalThis.FileSystemWritableFileStream||(globalThis.FileSystemWritableFileStream=l);const c=l},60643:(e,t,r)=>{r.d(t,{Z:()=>n});const n={ReadableStream:globalThis.ReadableStream,WritableStream:globalThis.WritableStream,TransformStream:globalThis.TransformStream,DOMException:globalThis.DOMException,Blob:globalThis.Blob,File:globalThis.File}},95345:(e,t,r)=>{r.r(t),r.d(t,{FileSystemDirectoryHandle:()=>m.default,FileSystemFileHandle:()=>p.default,FileSystemHandle:()=>u.Z,FileSystemWritableFileStream:()=>y.Z,getOriginPrivateDirectory:()=>d,showDirectoryPicker:()=>i,showOpenFilePicker:()=>s,showSaveFilePicker:()=>c});const n=globalThis.showDirectoryPicker;const i=async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(n&&!e._preferPolyfill)return n(e);const t=document.createElement("input");t.type="file",t.webkitdirectory=!0,t.multiple=!0,t.style.position="fixed",t.style.top="-100000px",t.style.left="-100000px",document.body.appendChild(t);const i=Promise.resolve().then(r.bind(r,69758));return await new Promise((e=>{t.addEventListener("change",e),t.click()})),i.then((e=>e.getDirHandlesFromInput(t)))},a={accepts:[]},o=globalThis.showOpenFilePicker;const s=async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t={...a,...e};if(o&&!e._preferPolyfill)return o(t);const n=document.createElement("input");n.type="file",n.multiple=t.multiple,n.accept=(t.accepts||[]).map((e=>[...(e.extensions||[]).map((e=>"."+e)),...e.mimeTypes||[]])).flat().join(","),Object.assign(n.style,{position:"fixed",top:"-100000px",left:"-100000px"}),document.body.appendChild(n);const i=Promise.resolve().then(r.bind(r,69758));return await new Promise((e=>{n.addEventListener("change",e,{once:!0}),n.click()})),n.remove(),i.then((e=>e.getFileHandlesFromInput(n)))},l=globalThis.showSaveFilePicker;const c=async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(l&&!e._preferPolyfill)return l(e);e._name&&(console.warn("deprecated _name, spec now have `suggestedName`"),e.suggestedName=e._name);const{FileSystemFileHandle:t}=await Promise.resolve().then(r.bind(r,8192)),{FileHandle:n}=await r.e(474).then(r.bind(r,60474));return new t(new n(e.suggestedName))};globalThis.DataTransferItem&&!DataTransferItem.prototype.getAsFileSystemHandle&&(DataTransferItem.prototype.getAsFileSystemHandle=async function(){const e=this.webkitGetAsEntry(),[{FileHandle:t,FolderHandle:n},{FileSystemDirectoryHandle:i},{FileSystemFileHandle:a}]=await Promise.all([r.e(3053).then(r.bind(r,13053)),Promise.resolve().then(r.bind(r,46979)),Promise.resolve().then(r.bind(r,8192))]);return e.isFile?new a(new t(e,!1)):new i(new n(e,!1))});const d=async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};var n,i;if(!e)return(null===(n=globalThis.navigator)||void 0===n||null===(i=n.storage)||void 0===i?void 0:i.getDirectory())||globalThis.getOriginPrivateDirectory();const{FileSystemDirectoryHandle:a}=await Promise.resolve().then(r.bind(r,46979)),o=await e;return new a(await(o.default?o.default(t):o(t)))};var y=r(83885),m=r(46979),p=r(8192),u=r(93232)},69758:(e,t,r)=>{r.r(t),r.d(t,{config:()=>i,errors:()=>n,fromDataTransfer:()=>a,getDirHandlesFromInput:()=>o,getFileHandlesFromInput:()=>s});const n={INVALID:["seeking position failed.","InvalidStateError"],GONE:["A requested file or directory could not be found at the time an operation was processed.","NotFoundError"],MISMATCH:["The path supplied exists, but was not an entry of requested type.","TypeMismatchError"],MOD_ERR:["The object can not be modified in this way.","InvalidModificationError"],SYNTAX:e=>["Failed to execute 'write' on 'UnderlyingSinkBase': Invalid params passed. ".concat(e),"SyntaxError"],SECURITY:["It was determined that certain files are unsafe for access within a Web application, or that too many calls are being made on file resources.","SecurityError"],DISALLOWED:["The request is not allowed by the user agent or the platform in the current context.","NotAllowedError"]},i={writable:globalThis.WritableStream};async function a(e){console.warn("deprecated fromDataTransfer - use `dt.items[0].getAsFileSystemHandle()` instead");const[t,n,i]=await Promise.all([r.e(8005).then(r.bind(r,28005)),r.e(3053).then(r.bind(r,13053)),Promise.resolve().then(r.bind(r,46979))]),a=new t.FolderHandle("",!1);return a._entries=e.map((e=>e.isFile?new n.FileHandle(e,!1):new n.FolderHandle(e,!1))),new i.FileSystemDirectoryHandle(a)}async function o(e){const{FolderHandle:t,FileHandle:n}=await r.e(8005).then(r.bind(r,28005)),{FileSystemDirectoryHandle:i}=await Promise.resolve().then(r.bind(r,46979)),a=Array.from(e.files),o=a[0].webkitRelativePath.split("/",1)[0],s=new t(o,!1);return a.forEach((e=>{const r=e.webkitRelativePath.split("/");r.shift();const i=r.pop();r.reduce(((e,r)=>(e._entries[r]||(e._entries[r]=new t(r,!1)),e._entries[r])),s)._entries[i]=new n(e.name,e,!1)})),new i(s)}async function s(e){const{FileHandle:t}=await r.e(8005).then(r.bind(r,28005)),{FileSystemFileHandle:n}=await Promise.resolve().then(r.bind(r,8192));return Array.from(e.files).map((e=>new n(new t(e.name,e,!1))))}}}]);